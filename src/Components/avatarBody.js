/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Circle, Planes } from "@react-three/drei";
import * as THREE from 'three';

export default function AvatarBody(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/avatar.glb");

  let video = document.createElement('video');
  video.width = 320;
  video.height = 240;
  video.autoplay = true;

  //Camera Detection

  if (navigator.mediaDevices.getUserMedia) {
    navigator.mediaDevices.getUserMedia({ video: true })
      .then(function (stream) {
        video.srcObject = stream;
        console.log("success")
      })
      .catch(function (error) {
        console.log("Something went wrong!");
      });
  }

  let videoTexture = new THREE.VideoTexture(video);


  return (
    <group>
      <Circle args={[8, 50]} position={[0, 23, 0]}>
        <meshBasicMaterial map={videoTexture} opacity={0.5} />
      </Circle>
      <group ref={group} {...props} dispose={null}>
      <group
        position={[0, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.5}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh.geometry}
          material={materials.Tshirt_Green}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_1.geometry}
          material={materials.LightSkin}
        />
      </group>
    </group>

    </group>
    
  );
}

useGLTF.preload("/avatar.glb");