/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import AvatarBody from "./avatarBody";
import AvatarHead from "./avatarHead";
import React, { useState, useEffect } from "react";
import { useThree, useFrame } from '@react-three/fiber';
import { PerspectiveCamera } from '@react-three/drei'

export default function Avatar(props) {
 

  useThree((state) => {
    //Initial camera position
    let camera;
    let playerPos;

    if (state.camera && state.scene.getObjectByName("player")) {
      camera = state.camera
      playerPos = state.scene.getObjectByName("player").position
      camera.position.set(0, playerPos["y"] + 30, 0);
      camera.rotation.set(0, Math.PI, 0);
      camera.fov = 60;
      camera.updateProjectionMatrix();

    }
    // state.scene.children[0].rotation.set(0,10,0);

  })

  useFrame((state, delta) => {
    // This function runs at the native refresh rate inside of a shared render-loop


    let playerPos = state.scene.getObjectByName("player").position

    // state.scene.children[0].position.set(camPos["x"], playerPos["y"] + 20 ,camPos["z"]);
    const updatedValue = playerPos["y"] + 20

    state.camera.position.set(playerPos["x"], updatedValue, playerPos["z"])
    // console.log(playerPos)

    // state.scene.children[0].rotation.set(0,10,0)

    // console.log("playerPos", playerPos);
    // console.log("camPos", state.camera);



    // state.camera.position.set(state.scene.getObjectByName("player").position)
  })

  //Updating Camera Controls
  return (
    <group name="player" position={[0, 280, 0]}>
      <AvatarBody position={[0, 0, 0]} />
      <AvatarHead position={[0, 25, 0]} />
    </group>

  );
}
