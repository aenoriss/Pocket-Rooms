/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import AvatarBody from "./avatarBody";
import { Circle, Planes } from "@react-three/drei";
import CameraControls from "./cameraControls";
import { FirstPersonControls, Sky, DeviceOrientationControls, PerspectiveCamera } from '@react-three/drei';
import React, { Suspense, useRef } from "react";
import * as THREE from 'three';

export default function Avatar(props) {

  let video = document.createElement('video');
  video.width = 320;
  video.height = 240;
  video.autoplay = true;


  //Camera Detection

  if (navigator.mediaDevices.getUserMedia) {
    navigator.mediaDevices.getUserMedia({ video: true })
      .then(function (stream) {
        video.srcObject = stream;
        console.log("success")
      })
      .catch(function (error) {
        console.log("Something went wrong!");
      });
  }

  let videoTexture = new THREE.VideoTexture(video);

  return (
    <group>
        <Circle args={[8, 50]} position={[0, 23, 0]}>
          <meshBasicMaterial map={videoTexture} opacity={0.5} />
        </Circle>
        <AvatarBody position={[0, -20, 0]} />
    </group>



  );
}
